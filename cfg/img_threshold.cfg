#!/usr/bin/env python
PACKAGE = "oculus_sonar"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("clh_tile_size",     int_t,     0, "cv2.createCLAHE tile_grid_size",   5,   1,   10)
gen.add("clh_clp_lmt",    double_t,     0, "cv2.createCLAHE clip_limit",     2.0,   0, 10.0)

gen.add("cny_min_thrshld",    int_t,    0, "cv2.Canny min threshold",         100,  0, 255)
gen.add("cny_max_thrshld",    int_t,    0, "cv2.Canny max threshold",         100,  0, 255)
gen.add("cny_l2g",           bool_t,    0, "cv2.Canny L2gradient",                    True)

gen.add("mrphlgy_krnl",       int_t,    0, "cv2.morphologyEx kernel",         5,    1,  10)
size_enum = gen.enum([ gen.const("Opening",     int_t, 0, "A small constant"),
                       gen.const("Closing",     int_t, 1, "A medium constant"),
                       gen.const("Gradient",    int_t, 2, "A large constant"),
                       gen.const("TopHat",      int_t, 3, "An extra large constant"),
                       gen.const("BlackHat",    int_t, 4, "An extra large constant"),
                       gen.const("Rectangular", int_t, 5, "An extra large constant"),
                       gen.const("Elliptical",  int_t, 6, "An extra large constant"),
                       gen.const("CrossShaped", int_t, 7, "An extra large constant")],
                     "cv2.morphologyEx type")
gen.add("Mrphlgcl_sel", int_t, 0, "cv2.morphologyEx type", 1, 0, 3, edit_method=size_enum)


gen.add("check", str_t, 0, "check if values changes in the node", "check0")

exit(gen.generate(PACKAGE, "oculus_sonar", "ImgThreshold"))